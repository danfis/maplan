---- Domain: pddl/depot-domain.pddl | pddl/depot-pfile1.pddl ----
Domain: depot
Problem: depotprob1818
Require: 1
Type[1]:
    [0]: object, parent: -1
Obj[13]:
    [0]: depot0, type: 0, is-constant: 0
    [1]: distributor0, type: 0, is-constant: 0
    [2]: distributor1, type: 0, is-constant: 0
    [3]: truck0, type: 0, is-constant: 0
    [4]: truck1, type: 0, is-constant: 0
    [5]: pallet0, type: 0, is-constant: 0
    [6]: pallet1, type: 0, is-constant: 0
    [7]: pallet2, type: 0, is-constant: 0
    [8]: crate0, type: 0, is-constant: 0
    [9]: crate1, type: 0, is-constant: 0
    [10]: hoist0, type: 0, is-constant: 0
    [11]: hoist1, type: 0, is-constant: 0
    [12]: hoist2, type: 0, is-constant: 0
Type-Obj:
    [0]: 0 1 2 3 4 5 6 7 8 9 10 11 12
Predicate[15]:
    at: 0 0
    on: 0 0
    in: 0 0
    lifting: 0 0
    available: 0
    clear: 0
    place: 0
    locatable: 0
    depot: 0
    distributor: 0
    truck: 0
    hoist: 0
    surface: 0
    pallet: 0
    crate: 0
Function[0]:
Action[5]:
    drive: ?x:0 ?y:0 ?z:0
        pre: (and (truck ?x) (place ?y) (place ?z) (at ?x ?y))
        eff: (and (at ?x ?z) (not (at ?x ?y)))
    lift: ?x:0 ?y:0 ?z:0 ?p:0
        pre: (and (hoist ?x) (crate ?y) (surface ?z) (place ?p) (at ?x ?p) (available ?x) (at ?y ?p) (on ?y ?z) (clear ?y))
        eff: (and (lifting ?x ?y) (clear ?z) (not (at ?y ?p)) (not (clear ?y)) (not (available ?x)) (not (on ?y ?z)))
    drop: ?x:0 ?y:0 ?z:0 ?p:0
        pre: (and (hoist ?x) (crate ?y) (surface ?z) (place ?p) (at ?x ?p) (at ?z ?p) (clear ?z) (lifting ?x ?y))
        eff: (and (available ?x) (at ?y ?p) (clear ?y) (on ?y ?z) (not (lifting ?x ?y)) (not (clear ?z)))
    load: ?x:0 ?y:0 ?z:0 ?p:0
        pre: (and (hoist ?x) (crate ?y) (truck ?z) (place ?p) (at ?x ?p) (at ?z ?p) (lifting ?x ?y))
        eff: (and (in ?y ?z) (available ?x) (not (lifting ?x ?y)))
    unload: ?x:0 ?y:0 ?z:0 ?p:0
        pre: (and (hoist ?x) (crate ?y) (truck ?z) (place ?p) (at ?x ?p) (at ?z ?p) (available ?x) (in ?y ?z))
        eff: (and (lifting ?x ?y) (not (in ?y ?z)) (not (available ?x)))
Goal[2]:
    on: crate0 pallet2
    on: crate1 pallet1
Init[36]:
    pallet: pallet0
    surface: pallet0
    at: pallet0 depot0
    clear: crate1
    pallet: pallet1
    surface: pallet1
    at: pallet1 distributor0
    clear: crate0
    pallet: pallet2
    surface: pallet2
    at: pallet2 distributor1
    clear: pallet2
    truck: truck0
    at: truck0 distributor1
    truck: truck1
    at: truck1 depot0
    hoist: hoist0
    at: hoist0 depot0
    available: hoist0
    hoist: hoist1
    at: hoist1 distributor0
    available: hoist1
    hoist: hoist2
    at: hoist2 distributor1
    available: hoist2
    crate: crate0
    surface: crate0
    at: crate0 distributor0
    on: crate0 pallet1
    crate: crate1
    surface: crate1
    at: crate1 depot0
    on: crate1 pallet0
    place: depot0
    place: distributor0
    place: distributor1
Init Func[0]:
Metric: 0
---- Domain: pddl/depot-domain.pddl | pddl/depot-pfile1.pddl END ----
---- Domain: pddl/driverlog-domain.pddl | pddl/driverlog-pfile1.pddl ----
Domain: driverlog
Problem: dlog-2-2-2
Require: 1
Type[1]:
    [0]: object, parent: -1
Obj[11]:
    [0]: driver1, type: 0, is-constant: 0
    [1]: driver2, type: 0, is-constant: 0
    [2]: truck1, type: 0, is-constant: 0
    [3]: truck2, type: 0, is-constant: 0
    [4]: package1, type: 0, is-constant: 0
    [5]: package2, type: 0, is-constant: 0
    [6]: s0, type: 0, is-constant: 0
    [7]: s1, type: 0, is-constant: 0
    [8]: s2, type: 0, is-constant: 0
    [9]: p1-0, type: 0, is-constant: 0
    [10]: p1-2, type: 0, is-constant: 0
Type-Obj:
    [0]: 0 1 2 3 4 5 6 7 8 9 10
Predicate[10]:
    obj: 0
    truck: 0
    location: 0
    driver: 0
    at: 0 0
    in: 0 0
    driving: 0 0
    link: 0 0
    path: 0 0
    empty: 0
Function[0]:
Action[6]:
    load-truck: ?obj:0 ?truck:0 ?driver:0 ?loc:0
        pre: (and (obj ?obj) (truck ?truck) (location ?loc) (driver ?driver) (at ?truck ?loc) (at ?obj ?loc) (driving ?driver ?truck))
        eff: (and (not (at ?obj ?loc)) (in ?obj ?truck))
    unload-truck: ?obj:0 ?truck:0 ?driver:0 ?loc:0
        pre: (and (obj ?obj) (truck ?truck) (location ?loc) (driver ?driver) (at ?truck ?loc) (in ?obj ?truck) (driving ?driver ?truck))
        eff: (and (not (in ?obj ?truck)) (at ?obj ?loc))
    board-truck: ?driver:0 ?truck:0 ?loc:0
        pre: (and (driver ?driver) (truck ?truck) (location ?loc) (at ?truck ?loc) (at ?driver ?loc) (empty ?truck))
        eff: (and (not (at ?driver ?loc)) (driving ?driver ?truck) (not (empty ?truck)))
    disembark-truck: ?driver:0 ?truck:0 ?loc:0
        pre: (and (driver ?driver) (truck ?truck) (location ?loc) (at ?truck ?loc) (driving ?driver ?truck))
        eff: (and (not (driving ?driver ?truck)) (at ?driver ?loc) (empty ?truck))
    drive-truck: ?truck:0 ?loc-from:0 ?loc-to:0 ?driver:0
        pre: (and (truck ?truck) (location ?loc-from) (location ?loc-to) (driver ?driver) (at ?truck ?loc-from) (driving ?driver ?truck) (link ?loc-from ?loc-to))
        eff: (and (not (at ?truck ?loc-from)) (at ?truck ?loc-to))
    walk: ?driver:0 ?loc-from:0 ?loc-to:0
        pre: (and (driver ?driver) (location ?loc-from) (location ?loc-to) (at ?driver ?loc-from) (path ?loc-from ?loc-to))
        eff: (and (not (at ?driver ?loc-from)) (at ?driver ?loc-to))
Goal[4]:
    at: driver1 s1
    at: truck1 s1
    at: package1 s0
    at: package2 s0
Init[33]:
    at: driver1 s2
    driver: driver1
    at: driver2 s2
    driver: driver2
    at: truck1 s0
    empty: truck1
    truck: truck1
    at: truck2 s0
    empty: truck2
    truck: truck2
    at: package1 s0
    obj: package1
    at: package2 s0
    obj: package2
    location: s0
    location: s1
    location: s2
    location: p1-0
    location: p1-2
    path: s1 p1-0
    path: p1-0 s1
    path: s0 p1-0
    path: p1-0 s0
    path: s1 p1-2
    path: p1-2 s1
    path: s2 p1-2
    path: p1-2 s2
    link: s0 s1
    link: s1 s0
    link: s0 s2
    link: s2 s0
    link: s2 s1
    link: s1 s2
Init Func[0]:
Metric: 0
---- Domain: pddl/driverlog-domain.pddl | pddl/driverlog-pfile1.pddl END ----
---- Domain: pddl/openstacks-p03-domain.pddl | pddl/openstacks-p03.pddl ----
Domain: openstacks-sequencedstrips-nonadl-nonnegated
Problem: os-sequencedstrips-p5_3
Require: 20002
Type[6]:
    [0]: object, parent: -1
    [1]: order, parent: 0
    [2]: product, parent: 0
    [3]: count, parent: 0
    [4]: manager-agent, parent: 0
    [5]: manufacturer-agent, parent: 0
Obj[18]:
    [0]: p1, type: 2, is-constant: 1
    [1]: p2, type: 2, is-constant: 1
    [2]: p3, type: 2, is-constant: 1
    [3]: p4, type: 2, is-constant: 1
    [4]: p5, type: 2, is-constant: 1
    [5]: o1, type: 1, is-constant: 1
    [6]: o2, type: 1, is-constant: 1
    [7]: o3, type: 1, is-constant: 1
    [8]: o4, type: 1, is-constant: 1
    [9]: o5, type: 1, is-constant: 1
    [10]: manager, type: 4, is-constant: 1
    [11]: manufacturer, type: 5, is-constant: 1
    [12]: n0, type: 3, is-constant: 0
    [13]: n1, type: 3, is-constant: 0
    [14]: n2, type: 3, is-constant: 0
    [15]: n3, type: 3, is-constant: 0
    [16]: n4, type: 3, is-constant: 0
    [17]: n5, type: 3, is-constant: 0
Type-Obj:
    [0]: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17
    [1]: 5 6 7 8 9
    [2]: 0 1 2 3 4
    [3]: 12 13 14 15 16 17
    [4]: 10
    [5]: 11
Predicate[8]:
    includes: 1 2
    waiting: 1
    started: 1
    shipped: 1
    made: 2
    not-made: 2
    stacks-avail: 3
    next-count: 3 3
Function[1]:
    total-cost:
Action[12]:
    open-new-stack: ?man:5 ?open:3 ?new-open:3
        pre: (and (stacks-avail ?open) (next-count ?open ?new-open))
        eff: (and (not (stacks-avail ?open)) (stacks-avail ?new-open) (COST 1))
    start-order: ?man:4 ?o:1 ?avail:3 ?new-avail:3
        pre: (and (waiting ?o) (stacks-avail ?avail) (next-count ?new-avail ?avail))
        eff: (and (not (waiting ?o)) (started ?o) (not (stacks-avail ?avail)) (stacks-avail ?new-avail))
    make-product-p1: ?man:5
        pre: (and (not-made p1) (started o2))
        eff: (and (not (not-made p1)) (made p1))
    make-product-p2: ?man:5
        pre: (and (not-made p2) (started o1) (started o2))
        eff: (and (not (not-made p2)) (made p2))
    make-product-p3: ?man:5
        pre: (and (not-made p3) (started o3) (started o4))
        eff: (and (not (not-made p3)) (made p3))
    make-product-p4: ?man:5
        pre: (and (not-made p4) (started o4))
        eff: (and (not (not-made p4)) (made p4))
    make-product-p5: ?man:5
        pre: (and (not-made p5) (started o5))
        eff: (and (not (not-made p5)) (made p5))
    ship-order-o1: ?man:4 ?avail:3 ?new-avail:3
        pre: (and (started o1) (made p2) (stacks-avail ?avail) (next-count ?avail ?new-avail))
        eff: (and (not (started o1)) (shipped o1) (not (stacks-avail ?avail)) (stacks-avail ?new-avail))
    ship-order-o2: ?man:4 ?avail:3 ?new-avail:3
        pre: (and (started o2) (made p1) (made p2) (stacks-avail ?avail) (next-count ?avail ?new-avail))
        eff: (and (not (started o2)) (shipped o2) (not (stacks-avail ?avail)) (stacks-avail ?new-avail))
    ship-order-o3: ?man:4 ?avail:3 ?new-avail:3
        pre: (and (started o3) (made p3) (stacks-avail ?avail) (next-count ?avail ?new-avail))
        eff: (and (not (started o3)) (shipped o3) (not (stacks-avail ?avail)) (stacks-avail ?new-avail))
    ship-order-o4: ?man:4 ?avail:3 ?new-avail:3
        pre: (and (started o4) (made p3) (made p4) (stacks-avail ?avail) (next-count ?avail ?new-avail))
        eff: (and (not (started o4)) (shipped o4) (not (stacks-avail ?avail)) (stacks-avail ?new-avail))
    ship-order-o5: ?man:4 ?avail:3 ?new-avail:3
        pre: (and (started o5) (made p5) (stacks-avail ?avail) (next-count ?avail ?new-avail))
        eff: (and (not (started o5)) (shipped o5) (not (stacks-avail ?avail)) (stacks-avail ?new-avail))
Goal[5]:
    shipped: o1
    shipped: o2
    shipped: o3
    shipped: o4
    shipped: o5
Init[22]:
    next-count: n0 n1
    next-count: n1 n2
    next-count: n2 n3
    next-count: n3 n4
    next-count: n4 n5
    stacks-avail: n0
    waiting: o1
    includes: o1 p3
    waiting: o2
    includes: o2 p4
    waiting: o3
    includes: o3 p4
    waiting: o4
    includes: o4 p2
    includes: o4 p5
    waiting: o5
    includes: o5 p1
    not-made: p1
    not-made: p2
    not-made: p3
    not-made: p4
    not-made: p5
Init Func[1]:
    total-cost: --> 0
Metric: 1
---- Domain: pddl/openstacks-p03-domain.pddl | pddl/openstacks-p03.pddl END ----
---- Domain: pddl/rovers-domain.pddl | pddl/rovers-p01.pddl ----
Domain: rover
Problem: roverprob1234
Require: 2
Type[8]:
    [0]: object, parent: -1
    [1]: rover, parent: 0
    [2]: waypoint, parent: 0
    [3]: store, parent: 0
    [4]: camera, parent: 0
    [5]: mode, parent: 0
    [6]: lander, parent: 0
    [7]: objective, parent: 0
Obj[13]:
    [0]: general, type: 6, is-constant: 0
    [1]: colour, type: 5, is-constant: 0
    [2]: high_res, type: 5, is-constant: 0
    [3]: low_res, type: 5, is-constant: 0
    [4]: rover0, type: 1, is-constant: 0
    [5]: rover0store, type: 3, is-constant: 0
    [6]: waypoint0, type: 2, is-constant: 0
    [7]: waypoint1, type: 2, is-constant: 0
    [8]: waypoint2, type: 2, is-constant: 0
    [9]: waypoint3, type: 2, is-constant: 0
    [10]: camera0, type: 4, is-constant: 0
    [11]: objective0, type: 7, is-constant: 0
    [12]: objective1, type: 7, is-constant: 0
Type-Obj:
    [0]: 0 1 2 3 4 5 6 7 8 9 10 11 12
    [1]: 4
    [2]: 6 7 8 9
    [3]: 5
    [4]: 10
    [5]: 1 2 3
    [6]: 0
    [7]: 11 12
Predicate[25]:
    at: 1 2
    at_lander: 6 2
    can_traverse: 1 2 2
    equipped_for_soil_analysis: 1
    equipped_for_rock_analysis: 1
    equipped_for_imaging: 1
    empty: 3
    have_rock_analysis: 1 2
    have_soil_analysis: 1 2
    full: 3
    calibrated: 4 1
    supports: 4 5
    available: 1
    visible: 2 2
    have_image: 1 7 5
    communicated_soil_data: 2
    communicated_rock_data: 2
    communicated_image_data: 7 5
    at_soil_sample: 2
    at_rock_sample: 2
    visible_from: 7 2
    store_of: 3 1
    calibration_target: 4 7
    on_board: 4 1
    channel_free: 6
Function[0]:
Action[9]:
    navigate: ?x:1 ?y:2 ?z:2
        pre: (and (can_traverse ?x ?y ?z) (available ?x) (at ?x ?y) (visible ?y ?z))
        eff: (and (not (at ?x ?y)) (at ?x ?z))
    sample_soil: ?x:1 ?s:3 ?p:2
        pre: (and (at ?x ?p) (at_soil_sample ?p) (equipped_for_soil_analysis ?x) (store_of ?s ?x) (empty ?s))
        eff: (and (not (empty ?s)) (full ?s) (have_soil_analysis ?x ?p) (not (at_soil_sample ?p)))
    sample_rock: ?x:1 ?s:3 ?p:2
        pre: (and (at ?x ?p) (at_rock_sample ?p) (equipped_for_rock_analysis ?x) (store_of ?s ?x) (empty ?s))
        eff: (and (not (empty ?s)) (full ?s) (have_rock_analysis ?x ?p) (not (at_rock_sample ?p)))
    drop: ?x:1 ?y:3
        pre: (and (store_of ?y ?x) (full ?y))
        eff: (and (not (full ?y)) (empty ?y))
    calibrate: ?r:1 ?i:4 ?t:7 ?w:2
        pre: (and (equipped_for_imaging ?r) (calibration_target ?i ?t) (at ?r ?w) (visible_from ?t ?w) (on_board ?i ?r))
        eff: (calibrated ?i ?r)
    take_image: ?r:1 ?p:2 ?o:7 ?i:4 ?m:5
        pre: (and (calibrated ?i ?r) (on_board ?i ?r) (equipped_for_imaging ?r) (supports ?i ?m) (visible_from ?o ?p) (at ?r ?p))
        eff: (and (have_image ?r ?o ?m) (not (calibrated ?i ?r)))
    communicate_soil_data: ?r:1 ?l:6 ?p:2 ?x:2 ?y:2
        pre: (and (at ?r ?x) (at_lander ?l ?y) (have_soil_analysis ?r ?p) (visible ?x ?y) (available ?r) (channel_free ?l))
        eff: (and (not (available ?r)) (not (channel_free ?l)) (channel_free ?l) (communicated_soil_data ?p) (available ?r))
    communicate_rock_data: ?r:1 ?l:6 ?p:2 ?x:2 ?y:2
        pre: (and (at ?r ?x) (at_lander ?l ?y) (have_rock_analysis ?r ?p) (visible ?x ?y) (available ?r) (channel_free ?l))
        eff: (and (not (available ?r)) (not (channel_free ?l)) (channel_free ?l) (communicated_rock_data ?p) (available ?r))
    communicate_image_data: ?r:1 ?l:6 ?o:7 ?m:5 ?x:2 ?y:2
        pre: (and (at ?r ?x) (at_lander ?l ?y) (have_image ?r ?o ?m) (visible ?x ?y) (available ?r) (channel_free ?l))
        eff: (and (not (available ?r)) (not (channel_free ?l)) (channel_free ?l) (communicated_image_data ?o ?m) (available ?r))
Goal[3]:
    communicated_soil_data: waypoint2
    communicated_rock_data: waypoint3
    communicated_image_data: objective1 high_res
Init[45]:
    visible: waypoint1 waypoint0
    visible: waypoint0 waypoint1
    visible: waypoint2 waypoint0
    visible: waypoint0 waypoint2
    visible: waypoint2 waypoint1
    visible: waypoint1 waypoint2
    visible: waypoint3 waypoint0
    visible: waypoint0 waypoint3
    visible: waypoint3 waypoint1
    visible: waypoint1 waypoint3
    visible: waypoint3 waypoint2
    visible: waypoint2 waypoint3
    at_soil_sample: waypoint0
    at_rock_sample: waypoint1
    at_soil_sample: waypoint2
    at_rock_sample: waypoint2
    at_soil_sample: waypoint3
    at_rock_sample: waypoint3
    at_lander: general waypoint0
    channel_free: general
    at: rover0 waypoint3
    available: rover0
    store_of: rover0store rover0
    empty: rover0store
    equipped_for_soil_analysis: rover0
    equipped_for_rock_analysis: rover0
    equipped_for_imaging: rover0
    can_traverse: rover0 waypoint3 waypoint0
    can_traverse: rover0 waypoint0 waypoint3
    can_traverse: rover0 waypoint3 waypoint1
    can_traverse: rover0 waypoint1 waypoint3
    can_traverse: rover0 waypoint1 waypoint2
    can_traverse: rover0 waypoint2 waypoint1
    on_board: camera0 rover0
    calibration_target: camera0 objective1
    supports: camera0 colour
    supports: camera0 high_res
    visible_from: objective0 waypoint0
    visible_from: objective0 waypoint1
    visible_from: objective0 waypoint2
    visible_from: objective0 waypoint3
    visible_from: objective1 waypoint0
    visible_from: objective1 waypoint1
    visible_from: objective1 waypoint2
    visible_from: objective1 waypoint3
Init Func[0]:
Metric: 0
---- Domain: pddl/rovers-domain.pddl | pddl/rovers-p01.pddl END ----
---- Domain: pddl/CityCar-domain.pddl | pddl/CityCar-p3-2-2-0-1.pddl ----
Domain: citycar
Problem: citycar-3-3-2
Require: 20096
Type[5]:
    [0]: object, parent: -1
    [1]: car, parent: 0
    [2]: junction, parent: 0
    [3]: garage, parent: 0
    [4]: road, parent: 0
Obj[18]:
    [0]: junction0-0, type: 2, is-constant: 0
    [1]: junction0-1, type: 2, is-constant: 0
    [2]: junction0-2, type: 2, is-constant: 0
    [3]: junction1-0, type: 2, is-constant: 0
    [4]: junction1-1, type: 2, is-constant: 0
    [5]: junction1-2, type: 2, is-constant: 0
    [6]: junction2-0, type: 2, is-constant: 0
    [7]: junction2-1, type: 2, is-constant: 0
    [8]: junction2-2, type: 2, is-constant: 0
    [9]: car0, type: 1, is-constant: 0
    [10]: car1, type: 1, is-constant: 0
    [11]: garage0, type: 3, is-constant: 0
    [12]: garage1, type: 3, is-constant: 0
    [13]: road0, type: 4, is-constant: 0
    [14]: road1, type: 4, is-constant: 0
    [15]: road2, type: 4, is-constant: 0
    [16]: road3, type: 4, is-constant: 0
    [17]: road4, type: 4, is-constant: 0
Type-Obj:
    [0]: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17
    [1]: 9 10
    [2]: 0 1 2 3 4 5 6 7 8
    [3]: 11 12
    [4]: 13 14 15 16 17
Predicate[11]:
    =: 0 0
    same_line: 2 2
    diagonal: 2 2
    at_car_jun: 1 2
    at_car_road: 1 4
    starting: 1 3
    arrived: 1 2
    road_connect: 4 2 2
    clear: 2
    in_place: 4
    at_garage: 3 2
Function[1]:
    total-cost:
Action[7]:
    move_car_in_road: ?xy_initial:2 ?xy_final:2 ?machine:1 ?r1:4
        pre: (and (at_car_jun ?machine ?xy_initial) (not (= ?xy_initial ?xy_final)) (road_connect ?r1 ?xy_initial ?xy_final) (in_place ?r1))
        eff: (and (clear ?xy_initial) (at_car_road ?machine ?r1) (not (at_car_jun ?machine ?xy_initial)) (COST 1))
    move_car_out_road: ?xy_initial:2 ?xy_final:2 ?machine:1 ?r1:4
        pre: (and (at_car_road ?machine ?r1) (clear ?xy_final) (not (= ?xy_initial ?xy_final)) (road_connect ?r1 ?xy_initial ?xy_final) (in_place ?r1))
        eff: (and (at_car_jun ?machine ?xy_final) (not (clear ?xy_final)) (not (at_car_road ?machine ?r1)) (COST 1))
    car_arrived: ?xy_final:2 ?machine:1
        pre: (and (at_car_jun ?machine ?xy_final))
        eff: (and (clear ?xy_final) (arrived ?machine ?xy_final) (not (at_car_jun ?machine ?xy_final)))
    car_start: ?xy_final:2 ?machine:1 ?g:3
        pre: (and (at_garage ?g ?xy_final) (starting ?machine ?g) (clear ?xy_final))
        eff: (and (not (clear ?xy_final)) (at_car_jun ?machine ?xy_final) (not (starting ?machine ?g)))
    build_diagonal_oneway: ?xy_initial:2 ?xy_final:2 ?r1:4
        pre: (and (clear ?xy_final) (not (= ?xy_initial ?xy_final)) (not (in_place ?r1)) (diagonal ?xy_initial ?xy_final))
        eff: (and (road_connect ?r1 ?xy_initial ?xy_final) (in_place ?r1) (COST 30))
    build_straight_oneway: ?xy_initial:2 ?xy_final:2 ?r1:4
        pre: (and (clear ?xy_final) (not (= ?xy_initial ?xy_final)) (same_line ?xy_initial ?xy_final) (not (in_place ?r1)))
        eff: (and (road_connect ?r1 ?xy_initial ?xy_final) (in_place ?r1) (COST 20))
    destroy_road: ?xy_initial:2 ?xy_final:2 ?r1:4
        pre: (and (road_connect ?r1 ?xy_initial ?xy_final) (not (= ?xy_initial ?xy_final)) (in_place ?r1))
        eff: (and (not (in_place ?r1)) (not (road_connect ?r1 ?xy_initial ?xy_final)) (COST 10) (and (when (at_car_road car0 ?r1) (and (not (at_car_road car0 ?r1)) (at_car_jun car0 ?xy_initial))) (when (at_car_road car1 ?r1) (and (not (at_car_road car1 ?r1)) (at_car_jun car1 ?xy_initial)))))
Goal[2]:
    arrived: car0 junction2-0
    arrived: car1 junction2-1
Init[53]:
    same_line: junction0-0 junction0-1
    same_line: junction0-1 junction0-0
    same_line: junction0-1 junction0-2
    same_line: junction0-2 junction0-1
    same_line: junction1-0 junction1-1
    same_line: junction1-1 junction1-0
    same_line: junction1-1 junction1-2
    same_line: junction1-2 junction1-1
    same_line: junction2-0 junction2-1
    same_line: junction2-1 junction2-0
    same_line: junction2-1 junction2-2
    same_line: junction2-2 junction2-1
    same_line: junction0-0 junction1-0
    same_line: junction1-0 junction0-0
    same_line: junction1-0 junction2-0
    same_line: junction2-0 junction1-0
    same_line: junction0-1 junction1-1
    same_line: junction1-1 junction0-1
    same_line: junction1-1 junction2-1
    same_line: junction2-1 junction1-1
    same_line: junction0-2 junction1-2
    same_line: junction1-2 junction0-2
    same_line: junction1-2 junction2-2
    same_line: junction2-2 junction1-2
    diagonal: junction0-0 junction1-1
    diagonal: junction1-1 junction0-0
    diagonal: junction0-1 junction1-0
    diagonal: junction1-0 junction0-1
    diagonal: junction0-1 junction1-2
    diagonal: junction1-2 junction0-1
    diagonal: junction0-2 junction1-1
    diagonal: junction1-1 junction0-2
    diagonal: junction1-0 junction2-1
    diagonal: junction2-1 junction1-0
    diagonal: junction1-1 junction2-0
    diagonal: junction2-0 junction1-1
    diagonal: junction1-1 junction2-2
    diagonal: junction2-2 junction1-1
    diagonal: junction1-2 junction2-1
    diagonal: junction2-1 junction1-2
    clear: junction0-0
    clear: junction0-1
    clear: junction0-2
    clear: junction1-0
    clear: junction1-1
    clear: junction1-2
    clear: junction2-0
    clear: junction2-1
    clear: junction2-2
    at_garage: garage0 junction0-0
    at_garage: garage1 junction0-0
    starting: car0 garage0
    starting: car1 garage1
Init Func[1]:
    total-cost: --> 0
Metric: 1
---- Domain: pddl/CityCar-domain.pddl | pddl/CityCar-p3-2-2-0-1.pddl END ----
---- Domain: pddl/elevators08-domain.pddl | pddl/elevators08-p01.pddl ----
Domain: elevators-sequencedstrips
Problem: elevators-sequencedstrips-p8_4_1
Require: 20002
Type[6]:
    [0]: object, parent: -1
    [1]: elevator, parent: 0
    [2]: slow-elevator, parent: 1
    [3]: fast-elevator, parent: 1
    [4]: passenger, parent: 0
    [5]: count, parent: 0
Obj[17]:
    [0]: n0, type: 5, is-constant: 0
    [1]: n1, type: 5, is-constant: 0
    [2]: n2, type: 5, is-constant: 0
    [3]: n3, type: 5, is-constant: 0
    [4]: n4, type: 5, is-constant: 0
    [5]: n5, type: 5, is-constant: 0
    [6]: n6, type: 5, is-constant: 0
    [7]: n7, type: 5, is-constant: 0
    [8]: n8, type: 5, is-constant: 0
    [9]: p0, type: 4, is-constant: 0
    [10]: p1, type: 4, is-constant: 0
    [11]: p2, type: 4, is-constant: 0
    [12]: p3, type: 4, is-constant: 0
    [13]: fast0, type: 3, is-constant: 0
    [14]: fast1, type: 3, is-constant: 0
    [15]: slow0-0, type: 2, is-constant: 0
    [16]: slow1-0, type: 2, is-constant: 0
Type-Obj:
    [0]: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16
    [1]: 13 14 15 16
    [2]: 15 16
    [3]: 13 14
    [4]: 9 10 11 12
    [5]: 0 1 2 3 4 5 6 7 8
Predicate[8]:
    passenger-at: 4 5
    boarded: 4 1
    lift-at: 1 5
    reachable-floor: 1 5
    above: 5 5
    passengers: 1 5
    can-hold: 1 5
    next: 5 5
Function[3]:
    total-cost:
    travel-slow: 5 5
    travel-fast: 5 5
Action[6]:
    move-up-slow: ?lift:2 ?f1:5 ?f2:5
        pre: (and (lift-at ?lift ?f1) (above ?f1 ?f2) (reachable-floor ?lift ?f2))
        eff: (and (lift-at ?lift ?f2) (not (lift-at ?lift ?f1)) (COST (travel-slow ?f1 ?f2)))
    move-down-slow: ?lift:2 ?f1:5 ?f2:5
        pre: (and (lift-at ?lift ?f1) (above ?f2 ?f1) (reachable-floor ?lift ?f2))
        eff: (and (lift-at ?lift ?f2) (not (lift-at ?lift ?f1)) (COST (travel-slow ?f2 ?f1)))
    move-up-fast: ?lift:3 ?f1:5 ?f2:5
        pre: (and (lift-at ?lift ?f1) (above ?f1 ?f2) (reachable-floor ?lift ?f2))
        eff: (and (lift-at ?lift ?f2) (not (lift-at ?lift ?f1)) (COST (travel-fast ?f1 ?f2)))
    move-down-fast: ?lift:3 ?f1:5 ?f2:5
        pre: (and (lift-at ?lift ?f1) (above ?f2 ?f1) (reachable-floor ?lift ?f2))
        eff: (and (lift-at ?lift ?f2) (not (lift-at ?lift ?f1)) (COST (travel-fast ?f2 ?f1)))
    board: ?p:4 ?lift:1 ?f:5 ?n1:5 ?n2:5
        pre: (and (lift-at ?lift ?f) (passenger-at ?p ?f) (passengers ?lift ?n1) (next ?n1 ?n2) (can-hold ?lift ?n2))
        eff: (and (not (passenger-at ?p ?f)) (boarded ?p ?lift) (not (passengers ?lift ?n1)) (passengers ?lift ?n2))
    leave: ?p:4 ?lift:1 ?f:5 ?n1:5 ?n2:5
        pre: (and (lift-at ?lift ?f) (boarded ?p ?lift) (passengers ?lift ?n1) (next ?n2 ?n1))
        eff: (and (passenger-at ?p ?f) (not (boarded ?p ?lift)) (not (passengers ?lift ?n1)) (passengers ?lift ?n2))
Goal[4]:
    passenger-at: p0 n4
    passenger-at: p1 n5
    passenger-at: p2 n6
    passenger-at: p3 n2
Init[86]:
    next: n0 n1
    next: n1 n2
    next: n2 n3
    next: n3 n4
    next: n4 n5
    next: n5 n6
    next: n6 n7
    next: n7 n8
    above: n0 n1
    above: n0 n2
    above: n0 n3
    above: n0 n4
    above: n0 n5
    above: n0 n6
    above: n0 n7
    above: n0 n8
    above: n1 n2
    above: n1 n3
    above: n1 n4
    above: n1 n5
    above: n1 n6
    above: n1 n7
    above: n1 n8
    above: n2 n3
    above: n2 n4
    above: n2 n5
    above: n2 n6
    above: n2 n7
    above: n2 n8
    above: n3 n4
    above: n3 n5
    above: n3 n6
    above: n3 n7
    above: n3 n8
    above: n4 n5
    above: n4 n6
    above: n4 n7
    above: n4 n8
    above: n5 n6
    above: n5 n7
    above: n5 n8
    above: n6 n7
    above: n6 n8
    above: n7 n8
    lift-at: fast0 n8
    passengers: fast0 n0
    can-hold: fast0 n1
    can-hold: fast0 n2
    can-hold: fast0 n3
    reachable-floor: fast0 n0
    reachable-floor: fast0 n2
    reachable-floor: fast0 n4
    reachable-floor: fast0 n6
    reachable-floor: fast0 n8
    lift-at: fast1 n6
    passengers: fast1 n0
    can-hold: fast1 n1
    can-hold: fast1 n2
    can-hold: fast1 n3
    reachable-floor: fast1 n0
    reachable-floor: fast1 n2
    reachable-floor: fast1 n4
    reachable-floor: fast1 n6
    reachable-floor: fast1 n8
    lift-at: slow0-0 n4
    passengers: slow0-0 n0
    can-hold: slow0-0 n1
    can-hold: slow0-0 n2
    reachable-floor: slow0-0 n0
    reachable-floor: slow0-0 n1
    reachable-floor: slow0-0 n2
    reachable-floor: slow0-0 n3
    reachable-floor: slow0-0 n4
    lift-at: slow1-0 n4
    passengers: slow1-0 n0
    can-hold: slow1-0 n1
    can-hold: slow1-0 n2
    reachable-floor: slow1-0 n4
    reachable-floor: slow1-0 n5
    reachable-floor: slow1-0 n6
    reachable-floor: slow1-0 n7
    reachable-floor: slow1-0 n8
    passenger-at: p0 n3
    passenger-at: p1 n1
    passenger-at: p2 n7
    passenger-at: p3 n0
Init Func[31]:
    travel-slow: n0 n1 --> 6
    travel-slow: n0 n2 --> 7
    travel-slow: n0 n3 --> 8
    travel-slow: n0 n4 --> 9
    travel-slow: n1 n2 --> 6
    travel-slow: n1 n3 --> 7
    travel-slow: n1 n4 --> 8
    travel-slow: n2 n3 --> 6
    travel-slow: n2 n4 --> 7
    travel-slow: n3 n4 --> 6
    travel-slow: n4 n5 --> 6
    travel-slow: n4 n6 --> 7
    travel-slow: n4 n7 --> 8
    travel-slow: n4 n8 --> 9
    travel-slow: n5 n6 --> 6
    travel-slow: n5 n7 --> 7
    travel-slow: n5 n8 --> 8
    travel-slow: n6 n7 --> 6
    travel-slow: n6 n8 --> 7
    travel-slow: n7 n8 --> 6
    travel-fast: n0 n2 --> 7
    travel-fast: n0 n4 --> 13
    travel-fast: n0 n6 --> 19
    travel-fast: n0 n8 --> 25
    travel-fast: n2 n4 --> 7
    travel-fast: n2 n6 --> 13
    travel-fast: n2 n8 --> 19
    travel-fast: n4 n6 --> 7
    travel-fast: n4 n8 --> 13
    travel-fast: n6 n8 --> 7
    total-cost: --> 0
Metric: 1
---- Domain: pddl/elevators08-domain.pddl | pddl/elevators08-p01.pddl END ----
