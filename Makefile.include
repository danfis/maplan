CC ?= gcc
CXX ?= g++
M4 ?= m4
SED ?= sed
FLEX ?= flex
PYTHON ?= python
PYTHON2 ?= python2
PYTHON3 ?= python3
CYTHON  ?= cython
SCAN_BUILD ?= scan-build
PROTOC ?= protoc

PYTHON_CONFIG ?= python-config

CC_NOT_GCC = no

SYSTEM = $(shell uname)

SYSTEM_CXXFLAGS =
SYSTEM_LDFLAGS =
CONFIG_FLAGS =

ifeq '$(SYSTEM)' 'FreeBSD'
  SYSTEM_CXXFLAGS = -Wno-long-long
  SED ?= gsed
else
endif

NOWALL ?= no
NOPEDANTIC ?= no
DEBUG ?= no
PROFIL ?= no

# Set to 'yes' if bin/ targets should be build as static binaries
BIN_STATIC ?= no

ifeq '$(CC_NOT_GCC)' 'yes'
  NOPEDANTIC := yes
endif

ifeq '$(PROFIL)' 'yes'
  DEBUG = yes
endif

ifeq '$(DEBUG)' 'yes'
  CFLAGS = -g
  CXXFLAGS = -g
  CONFIG_FLAGS += -DDEBUG
else
  # force to use optimizations
  CFLAGS += -O3
  CXXFLAGS += -O3
endif
ifeq '$(PROFIL)' 'yes'
  CFLAGS += -pg
  CXXFLAGS += -pg
endif

ifneq '$(NOWALL)' 'yes'
  CFLAGS += -Wall
  CXXFLAGS += -Wall
  ifeq '$(DEBUG)' 'yes'
    CFLAGS   += -Wno-unused-function
    CXXFLAGS += -Wno-unused-function
  endif
endif
ifneq '$(NOPEDANTIC)' 'yes'
  CFLAGS += -pedantic
  CXXFLAGS += -pedantic
endif

USE_MEMCHECK ?= no

ifeq '$(USE_MEMCHECK)' 'yes'
  CONFIG_FLAGS += -DUSE_MEMCHECK
endif

BINS     ?= yes
DYNAMIC  ?= no

ifneq '$(CC_NOT_GCC)' 'yes'
  CFLAGS += -std=gnu99 -ffast-math
endif
LDFLAGS += -pthread
LDFLAGS += $(SYSTEM_LDFLAGS)


USE_ZMQ ?= auto

ifeq '$(USE_ZMQ)' 'auto'
  USE_ZMQ = $(shell if pkg-config --exists libzmq; then echo "yes"; else echo "no"; fi;)
endif

ifeq '$(USE_ZMQ)' 'yes'
  ZMQ_CFLAGS ?= $(shell pkg-config --cflags libzmq)
  ZMQ_LDFLAGS ?= $(shell pkg-config --libs libzmq)
  CONFIG_FLAGS += -DUSE_ZMQ
endif

PROTOBUF_CFLAGS ?= $(shell pkg-config --cflags protobuf)
PROTOBUF_LDFLAGS ?= $(shell pkg-config --libs protobuf)


PREFIX     ?= /usr/local
INCLUDEDIR ?= include
LIBDIR     ?= lib
BINDIR     ?= bin

.DEFAULT_GOAL := all
