/* Generated by the protocol buffer compiler.  DO NOT EDIT! */

#ifndef PROTOBUF_C_src_2fma_5fmsg_2eproto__INCLUDED
#define PROTOBUF_C_src_2fma_5fmsg_2eproto__INCLUDED

#include <google/protobuf-c/protobuf-c.h>

PROTOBUF_C_BEGIN_DECLS


typedef struct _PlanMultiAgentMsgPathOperator PlanMultiAgentMsgPathOperator;
typedef struct _PlanMultiAgentMsg PlanMultiAgentMsg;


/* --- enums --- */

typedef enum _PlanMultiAgentMsg__Type {
  PLAN_MULTI_AGENT_MSG__TYPE___TERMINATE = 256,
  PLAN_MULTI_AGENT_MSG__TYPE___TERMINATE_REQUEST = 257,
  PLAN_MULTI_AGENT_MSG__TYPE___TERMINATE_ACK = 258,
  PLAN_MULTI_AGENT_MSG__TYPE__TERMINATE = 1,
  PLAN_MULTI_AGENT_MSG__TYPE__PUBLIC_STATE = 2,
  PLAN_MULTI_AGENT_MSG__TYPE__TRACE_PATH = 3,
  PLAN_MULTI_AGENT_MSG__TYPE__TRACE_PATH_DONE = 4
} PlanMultiAgentMsg__Type;

/* --- messages --- */

struct  _PlanMultiAgentMsgPathOperator
{
  ProtobufCMessage base;
  char *name;
  int32_t cost;
};
#define PLAN_MULTI_AGENT_MSG_PATH_OPERATOR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&plan_multi_agent_msg_path_operator__descriptor) \
    , NULL, 0 }


struct  _PlanMultiAgentMsg
{
  ProtobufCMessage base;
  PlanMultiAgentMsg__Type type;
  char *agent_name;
  protobuf_c_boolean has_state;
  ProtobufCBinaryData state;
  protobuf_c_boolean has_cost;
  int32_t cost;
  protobuf_c_boolean has_real_cost;
  int32_t real_cost;
  protobuf_c_boolean has_heuristic;
  int32_t heuristic;
  protobuf_c_boolean has_init_state;
  ProtobufCBinaryData init_state;
  size_t n_path;
  PlanMultiAgentMsgPathOperator **path;
  protobuf_c_boolean has_path_first_state;
  ProtobufCBinaryData path_first_state;
  char *trace_path_initiator;
};
#define PLAN_MULTI_AGENT_MSG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&plan_multi_agent_msg__descriptor) \
    , 0, NULL, 0,{0,NULL}, 0,0, 0,0, 0,0, 0,{0,NULL}, 0,NULL, 0,{0,NULL}, NULL }


/* PlanMultiAgentMsgPathOperator methods */
void   plan_multi_agent_msg_path_operator__init
                     (PlanMultiAgentMsgPathOperator         *message);
size_t plan_multi_agent_msg_path_operator__get_packed_size
                     (const PlanMultiAgentMsgPathOperator   *message);
size_t plan_multi_agent_msg_path_operator__pack
                     (const PlanMultiAgentMsgPathOperator   *message,
                      uint8_t             *out);
size_t plan_multi_agent_msg_path_operator__pack_to_buffer
                     (const PlanMultiAgentMsgPathOperator   *message,
                      ProtobufCBuffer     *buffer);
PlanMultiAgentMsgPathOperator *
       plan_multi_agent_msg_path_operator__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   plan_multi_agent_msg_path_operator__free_unpacked
                     (PlanMultiAgentMsgPathOperator *message,
                      ProtobufCAllocator *allocator);
/* PlanMultiAgentMsg methods */
void   plan_multi_agent_msg__init
                     (PlanMultiAgentMsg         *message);
size_t plan_multi_agent_msg__get_packed_size
                     (const PlanMultiAgentMsg   *message);
size_t plan_multi_agent_msg__pack
                     (const PlanMultiAgentMsg   *message,
                      uint8_t             *out);
size_t plan_multi_agent_msg__pack_to_buffer
                     (const PlanMultiAgentMsg   *message,
                      ProtobufCBuffer     *buffer);
PlanMultiAgentMsg *
       plan_multi_agent_msg__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   plan_multi_agent_msg__free_unpacked
                     (PlanMultiAgentMsg *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*PlanMultiAgentMsgPathOperator_Closure)
                 (const PlanMultiAgentMsgPathOperator *message,
                  void *closure_data);
typedef void (*PlanMultiAgentMsg_Closure)
                 (const PlanMultiAgentMsg *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor plan_multi_agent_msg_path_operator__descriptor;
extern const ProtobufCMessageDescriptor plan_multi_agent_msg__descriptor;
extern const ProtobufCEnumDescriptor    plan_multi_agent_msg__type__descriptor;

PROTOBUF_C_END_DECLS


#endif  /* PROTOBUF_src_2fma_5fmsg_2eproto__INCLUDED */
